(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{190:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"#%E7%9B%92%E6%A8%A1%E5%9E%8B"}},[t._v("XSS")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#%E4%BC%AA%E7%B1%BB%E5%92%8C%E5%BE%AE%E5%85%83%E7%B4%A0%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("CSRF")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#float"}},[t._v("float")])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"#devicePixelRatio"}},[t._v("devicePixelRatio")])])])]),t._v(" "),s("h2",{attrs:{id:"盒模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),s("h3",{attrs:{id:"页面渲染时，dom-元素所采用的-布局模型。可通过-box-sizing-进行设置。根据计算宽高的区域可分为："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染时，dom-元素所采用的-布局模型。可通过-box-sizing-进行设置。根据计算宽高的区域可分为：","aria-hidden":"true"}},[t._v("#")]),t._v(" 页面渲染时，dom 元素所采用的 布局模型。可通过 box-sizing 进行设置。根据计算宽高的区域可分为：")]),t._v(" "),s("ol",[s("li",[t._v("content-box (W3C 标准盒模型)")]),t._v(" "),s("li",[t._v("border-box (IE 盒模型)")]),t._v(" "),s("li",[t._v("padding-box")]),t._v(" "),s("li",[t._v("margin-box (浏览器未实现)")])]),t._v(" "),s("h2",{attrs:{id:"伪类和微元素的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪类和微元素的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 伪类和微元素的区别")]),t._v(" "),s("h4",{attrs:{id:"定義"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定義","aria-hidden":"true"}},[t._v("#")]),t._v(" 定義")]),t._v(" "),s("ol",[s("li",[t._v("伪类\n伪类存在的意义是为了通过选择器，格式化 DOM 树以外的信息以及不能被常规 CSS 选择器获取到的信息。(伪类其实是弥补了 CSS 选择器的不足，用来更方便地获取信息。)\n"),s("img",{attrs:{src:"/img/1575920682-5aa8738170650.png",alt:"avatar"}})]),t._v(" "),s("li",[t._v("伪元素\n伪元素可以创建一些文档语言无法创建的虚拟元素。比如：文档语言没有一种机制可以描述元素内容的第一个字母或第一行，但伪元素可以做到(::first-letter、::first-line)。同时，伪元素还可以创建源文档不存在的内容，比如使用 ::before 或 ::after。(伪元素本质上是创建了一个虚拟容器(元素)，我们可以在其中添加内容或样式。)")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Selector")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Meaning")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("CSS")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("::first-letter")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("选择指定元素的第一个单词")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("::first-line")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("选择指定元素的第一行")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("1")])]),t._v(" "),s("tr",[s("td",[t._v("::after")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在指定元素的内容前面插入内容")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("::before")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在指定元素的内容后面插入内容")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("2")])]),t._v(" "),s("tr",[s("td",[t._v("::selection")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("选择指定元素中被用户选中的内容")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("3")])])])]),t._v(" "),s("h2",{attrs:{id:"float"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float","aria-hidden":"true"}},[t._v("#")]),t._v(" float")]),t._v(" "),s("h3",{attrs:{id:"为何要清除浮动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为何要清除浮动","aria-hidden":"true"}},[t._v("#")]),t._v(" 为何要清除浮动")]),t._v(" "),s("p",[t._v("浮动的属性虽然方便使用，但是在使用这种属性时，也存在着一种弊端，那就是当子元素设置了 float 属性之后，且父元素的高度和宽度没有进行设置，而是由子元素支撑起来，则会导致父元素的高度塌陷(原本的 height 后来被置为 0)")]),t._v(" "),s("div",{staticClass:"language-CSS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{attrs:{class:"token selector"}},[t._v(".clearfix:after")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("content")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('" "')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("display")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("clear")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("height")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"devicepixelratio"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#devicepixelratio","aria-hidden":"true"}},[t._v("#")]),t._v(" devicePixelRatio")]),t._v(" "),s("h3",{attrs:{id:"解决高清的适配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决高清的适配","aria-hidden":"true"}},[t._v("#")]),t._v(" 解决高清的适配")]),t._v(" "),s("h3",{attrs:{id:"常见高清显示屏中位图被放大的比例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见高清显示屏中位图被放大的比例","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见高清显示屏中位图被放大的比例")]),t._v(" "),s("p",[t._v("我们可以了解到 retina 显示屏 中图片被放大的倍数高达 2:1，而其实各种高清显示屏放大的倍数是不同的，有 1.3:1、1.5:1、2:1、3:1 ，目前最多的是 2:1，而 HTC Butterfly、Nexus 5、Samsung Galaxy S4、 Sony Xperia Z 这个几个系列的移动设备，图片被放大的倍数高达 3:1")]),t._v(" "),s("h3",{attrs:{id:"区分普通显示屏和高清屏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区分普通显示屏和高清屏","aria-hidden":"true"}},[t._v("#")]),t._v(" 区分普通显示屏和高清屏")]),t._v(" "),s("p",[t._v("通过 devicePixelRatio 的值，就可以区分普通显示屏和高清屏，当 devicePixelRatio 值等于 1 时（也就是最小值），那么它普通显示屏，当 devicePixelRatio 值大于 1(通常是 1.5、2.0)，那么它就是高清显示屏。")]),t._v(" "),s("h3",{attrs:{id:"移动端如何调用高清背景图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动端如何调用高清背景图","aria-hidden":"true"}},[t._v("#")]),t._v(" 移动端如何调用高清背景图")]),t._v(" "),s("p",[t._v("为了更好的提升用户体验，节省移动端的流量，针对不同的显示屏，我们可以采取不用的方案，保证图片在不同显示屏幕下正常展现，这个方法跟设计原生 APP 中针对不同分辨率采用使用不同图片的原理相似~")]),t._v(" "),s("p",[t._v("通过判断 devicePixelRatio 的值来加载不同尺寸的图片")]),t._v(" "),s("p",[t._v("针对普通显示屏(devicePixelRatio = 1.0、1.3)，加载一张 1 倍的图片\n针对高清显示屏(devicePixelRatio >= 1.5、2.0、3.0)，加载一张 2 倍大的图片\n由于 3.0 的手机目前比较少，3.0 也加载一张 2 倍的图片是可以接受的。那么，通过上面的方案，我们不是需要设计 2 套图片，甚至是 3 套图片呢？")]),t._v(" "),s("p",[t._v("具体还是要看产品需求的用户群、维护成本、产品急需上线等来设计方案，例如用户群大都是高端手机来的，全部都采用加载一张 2 倍的图片也是可以接受的~")]),t._v(" "),s("h3",{attrs:{id:"scss-解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scss-解决方案","aria-hidden":"true"}},[t._v("#")]),t._v(" SCSS 解决方案")]),t._v(" "),s("div",{staticClass:"language-CSS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{attrs:{class:"token atrule"}},[s("span",{attrs:{class:"token rule"}},[t._v("@mixin")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("bg-image")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$url"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token property"}},[t._v("background-image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("url")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$url+"),s("span",{attrs:{class:"token string"}},[t._v('"@2x.png"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token atrule"}},[s("span",{attrs:{class:"token rule"}},[t._v("@media")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token property"}},[t._v("-webkit-min-device-pixel-ratio")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token property"}},[t._v("min-device-pixel-ratio")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token property"}},[t._v("background-image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("url")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$url+"),s("span",{attrs:{class:"token string"}},[t._v('"@3x.png"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"css3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS3")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/css3.png",alt:"avatar"}})]),t._v(" "),s("h2",{attrs:{id:"动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动画","aria-hidden":"true"}},[t._v("#")]),t._v(" 动画")]),t._v(" "),s("h3",{attrs:{id:"transition-过渡动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transition-过渡动画","aria-hidden":"true"}},[t._v("#")]),t._v(" transition: 过渡动画")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("transition-property: 属性")])]),t._v(" "),s("li",[s("p",[t._v("transition-duration: 间隔")])]),t._v(" "),s("li",[s("p",[t._v("transition-timing-function: 曲线")])]),t._v(" "),s("li",[s("p",[t._v("transition-delay: 延迟")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("transition-timing-function")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Meaning")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("linear")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。")])]),t._v(" "),s("tr",[s("td",[t._v("ease")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。")])]),t._v(" "),s("tr",[s("td",[t._v("ease-in")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。")])]),t._v(" "),s("tr",[s("td",[t._v("ease-out")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。")])]),t._v(" "),s("tr",[s("td",[t._v("ease-in-out")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）")])]),t._v(" "),s("tr",[s("td",[t._v("cubic-bezier(n,n,n,n)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值。")])])])])])])])}],!1,null,null,null);a.default=n.exports}}]);