"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3708],{783:(e,l,n)=>{n.r(l),n.d(l,{data:()=>t});const t={key:"v-0754cde1",path:"/zh/advanced/architecture.html",title:"架构",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"概览",slug:"概览",children:[]},{level:2,title:"核心流程与 Hooks",slug:"核心流程与-hooks",children:[]}],filePathRelative:"zh/advanced/architecture.md",git:{updatedTime:1636880153e3,contributors:[{name:"lbz",email:"905808069@qq.com",commits:1}]}}},3744:(e,l)=>{l.Z=(e,l)=>{for(const[n,t]of l)e[n]=t;return e}},1895:(e,l,n)=>{n.r(l),n.d(l,{default:()=>B});var t=n(6252);const r=(0,t.uE)('<h1 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h1><h2 id="概览" tabindex="-1"><a class="header-anchor" href="#概览" aria-hidden="true">#</a> 概览</h2><p><img src="/images/guide/vuepress-architecture-overview.png" alt="vuepress-architecture-overview"></p><p>上图展示了 VuePress 的简要架构：</p><ul><li>Node App 会生成临时文件，包括布局、页面、路由等。</li><li>Bundler 会将 Client App 和临时文件一起进行打包，就像处理一个普通的 Vue SPA 一样。</li></ul><p>作为开发者，你必须要意识到 VuePress 分为两个主要部分： <strong>Node App</strong> 和 <strong>Client App</strong> ，这一点对于开发插件和主题来说都十分重要。</p><ul><li>插件或者主题的入口文件会在 Node App 中被加载，因此它们需要使用 CommonJS 格式。</li><li>客户端文件会在 Client App 中被加载，也就是会被 Bundler 处理。比如布局、组件、App Setup 文件、App Enhance 文件等。它们最好使用 ESM 格式。</li></ul><h2 id="核心流程与-hooks" tabindex="-1"><a class="header-anchor" href="#核心流程与-hooks" aria-hidden="true">#</a> 核心流程与 Hooks</h2><p><img src="/images/guide/vuepress-core-process.png" alt="vuepress-core-process"></p>',9),i=(0,t.Uk)("上图展示了 VuePress 的核心流程以及 "),a=(0,t.Uk)("插件 API"),u=(0,t.Uk)(" 的 Hooks ："),s=(0,t.Uk)("在 "),o=(0,t._)("strong",null,"init",-1),d=(0,t.Uk)(" 阶段： "),p=(0,t._)("li",null,"主题和插件会被加载。这意味着插件需要在初始化之前使用。",-1),h=(0,t.Uk)("由于我们要使用 markdown-it 来解析 Markdown 文件，因此 "),c=(0,t.Uk)("extendsMarkdown"),k=(0,t.Uk)(" 会在加载页面文件之前调用。"),g=(0,t.Uk)("页面文件会被加载： "),m=(0,t.Uk)("extendsPageOptions"),f=(0,t.Uk)(" Hook 会被调用，用以创建页面。"),_=(0,t.Uk)("extendsPageData"),U=(0,t.Uk)(" Hook 会被调用，用以生成页面数据。"),v=(0,t._)("li",null,[(0,t.Uk)("在 "),(0,t._)("strong",null,"prepare"),(0,t.Uk)(" 阶段： "),(0,t._)("ul",null,[(0,t._)("li",null,"临时文件会被生成，因此所有和客户端文件相关的 Hooks 会在此处调用。")])],-1),w=(0,t.Uk)("在 "),x=(0,t._)("strong",null,"dev / build",-1),z=(0,t.Uk)(" 阶段： "),A=(0,t.Uk)("Bundler 会被加载。由于 "),b=(0,t.Uk)("alias"),P=(0,t.Uk)(" 和 "),C=(0,t.Uk)("define"),H=(0,t.Uk)(" 依赖于 Bundler 的配置，所以它们会在此处调用。"),W={},B=(0,n(3744).Z)(W,[["render",function(e,l){const n=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[r,(0,t._)("p",null,[i,(0,t.Wm)(n,{to:"/zh/reference/plugin-api.html"},{default:(0,t.w5)((()=>[a])),_:1}),u]),(0,t._)("ul",null,[(0,t._)("li",null,[s,o,d,(0,t._)("ul",null,[p,(0,t._)("li",null,[h,(0,t.Wm)(n,{to:"/zh/reference/plugin-api.html#extendsmarkdown"},{default:(0,t.w5)((()=>[c])),_:1}),k]),(0,t._)("li",null,[g,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(n,{to:"/zh/reference/plugin-api.html#extendspageoptions"},{default:(0,t.w5)((()=>[m])),_:1}),f]),(0,t._)("li",null,[(0,t.Wm)(n,{to:"/zh/reference/plugin-api.html#extendspagedata"},{default:(0,t.w5)((()=>[_])),_:1}),U])])])])]),v,(0,t._)("li",null,[w,x,z,(0,t._)("ul",null,[(0,t._)("li",null,[A,(0,t.Wm)(n,{to:"/zh/reference/plugin-api.html#alias"},{default:(0,t.w5)((()=>[b])),_:1}),P,(0,t.Wm)(n,{to:"/zh/reference/plugin-api.html#define"},{default:(0,t.w5)((()=>[C])),_:1}),H])])])])],64)}]])}}]);